# name: Pipeline Checks
# on:
#   push:
#     branches: 
#     - main
# jobs:
#   format-check:
#     name: Check formatting
#     runs-on: ubuntu-latest
#     steps:
#     - name: Set up Go 1.x 
#       uses: actions/setup-go@v5
#       with:
#         go-version: ^1.20
#     - name: Check out code into the Go module directory
#       uses: actions/checkout@v4
#     - name: Run Format Check
#       run: make check-format
#     - name: Vet
#       run: go vet ./... # <1>


#   test:
#     name: Test Application
#     needs:
#       - format-check
#       # - lint
#     runs-on: ubuntu-latest 
#     steps:
#     - name: Set up Go 1.x
#       uses: actions/setup-go@v3
#       with:
#         go-version: ^1.20
#     - name: Check out code into the Go module directory
#       uses: actions/checkout@v3
#     - name: Run Test
#       run: make test 
#     - name: Coverage Check
#       run: make coverage 
#     - name: Generate Report
#       run: make report 
#     - name: Copy Files
#       run: |
#         mkdir  reports
#         cp cover.html reports/.

#     - name: Archive 
#       uses: actions/upload-artifact@v3
#       with:
#         name: reports
#         path: ./reports 
#   build:
#     name: Build App
#     runs-on: ubuntu-latest 
#     needs: test 
#     steps:
#     - name: Set up Go 1.x 
#       uses: actions/setup-go@v5 
#       with:
#         go-version: ^1.21

#     - name: Check out code into the Go module directory 
#       uses: actions/checkout@v4

#     - name: Build
#       run: make build 

#     - name: Copy Files 
#       run: |
#         mkdir  artifacts
#         cp sveltego artifacts/.

#     - name: Archive 
#       uses: actions/upload-artifact@v3
#       with:
#         name: sveltego
#         path: ./artifacts 

#   Docker:
    
#           runs-on: ubuntu-latest
#           steps:
       
#             - 
#               name: Checkout
#               uses: actions/checkout@v4
#             -
#               name: Login to Docker Hub
#               uses: docker/login-action@v3
#               with:
#                 username: ${{ secrets.DOCKER_USERNAME }}
#                 password: ${{ secrets.DOCKERHUB_TOKEN }}
#             -
#               name: Set up Docker Buildx
#               uses: docker/setup-buildx-action@v3
#             -
#               name: Build and push
#               uses: docker/build-push-action@v5
#               with:
#                 context: .
#                 push: true
#                 tags: ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest
     








   